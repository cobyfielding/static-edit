{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/block.ts","src/editable.ts","src/editor.ts","src/line.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;ACAA,uCAAqC;AAErC;IAA2B,yBAAQ;IAAnC;;IAIA,CAAC;IAHG,2BAAW,GAAX;QACI,MAAM,CAAM,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAA;IAClD,CAAC;IACL,YAAC;AAAD,CAJA,AAIC,CAJ0B,mBAAQ,GAIlC;AAJY,sBAAK;;;;;ACAlB;IAKI,kBAAY,IAAiB,EAAE,MAAc;QACzC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAChB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;IACxB,CAAC;IAED,6BAAU,GAAV;QAAA,iBAmDC;QAlDG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAC,CAAC;YAClC,CAAC,CAAC,eAAe,EAAE,CAAA;YACnB,CAAC,CAAC,cAAc,EAAE,CAAA;YAElB,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;gBAChC,MAAM,CAAC,KAAK,CAAA;YAChB,CAAC;YAED,IAAM,KAAK,GAAG,KAAI,CAAC,WAAW,EAAE,CAAA;YAChC,KAAK,CAAC,KAAK,GAAG,KAAI,CAAC,IAAI,CAAC,SAAS,CAAA;YAEjC,KAAK,CAAC,gBAAgB,CAAC,MAAM,EAAE;gBAC3B,IAAM,QAAQ,GAAG,KAAI,CAAC,IAAI,CAAC,SAAS,CAAA;gBACpC,IAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAA;gBAC5B,KAAI,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAA;gBAC9B,KAAI,CAAC,OAAO,GAAG,IAAI,CAAA;gBACnB,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,KAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;gBAE/C,kFAAkF;gBAClF,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAvD,CAAuD,EAAE,GAAG,CAAC,CAAA;YAClF,CAAC,CAAC,CAAA;YAEF,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAC,CAAC;gBAC9B,CAAC,CAAC,eAAe,EAAE,CAAA;gBACnB,CAAC,CAAC,cAAc,EAAE,CAAA;YACtB,CAAC,CAAC,CAAA;YAEF,IAAI,MAAM,GAAG;gBACT,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAA;gBAC3B,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,YAAY,GAAG,IAAI,CAAA;YAClD,CAAC,CAAA;YAED,8CAA8C;YAC9C,IAAI,aAAa,GAAG,cAAM,OAAA,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,EAA5B,CAA4B,CAAA;YAEtD,KAAK,CAAC,gBAAgB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;YACxC,KAAK,CAAC,gBAAgB,CAAC,KAAK,EAAE,aAAa,CAAC,CAAA;YAC5C,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,aAAa,CAAC,CAAA;YAC9C,KAAK,CAAC,gBAAgB,CAAC,MAAM,EAAE,aAAa,CAAC,CAAA;YAC7C,KAAK,CAAC,gBAAgB,CAAC,SAAS,EAAE,aAAa,CAAC,CAAA;YAEhD,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAA;YAC1B,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,KAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAA;YAClD,KAAK,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAA;YAChC,KAAK,CAAC,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,gBAAgB,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAA;YAElE,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,EAAE,KAAI,CAAC,IAAI,CAAC,CAAA;YACnD,KAAK,CAAC,KAAK,EAAE,CAAA;YACb,MAAM,EAAE,CAAA;QACZ,CAAC,EAAE,IAAI,CAAC,CAAA;IACZ,CAAC;IAID,sBAAI,2BAAK;aAAT;YACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAA;QAChC,CAAC;;;OAAA;IAED,sBAAI,6BAAO;aAAX;YACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAA;QACpB,CAAC;;;OAAA;IAED,sBAAI,gCAAU;aAAd;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAA;QACvB,CAAC;;;OAAA;IACL,eAAC;AAAD,CA5EA,AA4EC,IAAA;AA5EqB,4BAAQ;;;;;ACF9B,iCAA+B;AAC/B,+BAA6B;AAO7B;IAII,gBAAoB,OAAgB;QAAhB,YAAO,GAAP,OAAO,CAAS;QAChC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAA;QACf,IAAM,KAAK,GAA8B,QAAQ,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAA;QAEpF,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC;YACpC,IAAI,GAAG,SAAU,CAAA;YAEjB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,GAAG,CAAC,CAAC,CAAC;gBAC3B,GAAG,GAAG,IAAI,aAAK,CAAc,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;YAChD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,GAAG,GAAG,IAAI,WAAI,CAAc,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;YAC/C,CAAC;YAED,GAAG,CAAC,UAAU,EAAE,CAAA;YAChB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;QACxB,CAAC;QAED,IAAI,CAAC,aAAa,EAAE,CAAA;IACxB,CAAC;IAED,8BAAa,GAAb;QAAA,iBAgBC;QAfG,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC;YACnC,IAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAA;YAC/C,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAC,CAAC;gBAC/B,CAAC,CAAC,cAAc,EAAE,CAAA;gBAClB,CAAC,CAAC,eAAe,EAAE,CAAA;gBACnB,IAAI,MAAM,GAAG,IAAI,WAAW,CAAC,oBAAoB,EAAE,EAAC,MAAM,EAAE,EAAC,OAAO,EAAE,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,UAAU,EAAZ,CAAY,CAAC,EAAC,EAAC,CAAC,CAAA;gBAC/G,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAA;YAChC,CAAC,CAAC,CAAA;YAEF,MAAM,CAAC,WAAW,GAAG,MAAM,CAAA;YAC3B,MAAM,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAA;YAClC,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,CAAA;YACzB,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,CAAA;YAC1B,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;QACrC,CAAC;IACL,CAAC;IAED,+BAAc,GAAd;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACf,MAAM,CAAC,KAAK,CAAA;QAChB,CAAC;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAA;QAEnB,MAAM,CAAC,IAAI,CAAA;IACf,CAAC;IAED,6BAAY,GAAZ,UAAa,IAAiB,EAAE,QAAgB,EAAE,QAAgB;QAC9D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAA;QAEpB,IAAI,YAAY,GAAG,IAAI,WAAW,CAAC,oBAAoB,EAAE,EAAC,MAAM,EAAE,EAAC,IAAI,MAAA,EAAE,QAAQ,UAAA,EAAE,QAAQ,UAAA,EAAC,EAAC,CAAC,CAAA;QAC9F,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,CAAA;IACtC,CAAC;IACL,aAAC;AAAD,CA1DA,AA0DC,IAAA;AA1DY,wBAAM;;;;;;;;;;;;;;;ACRnB,uCAAqC;AAErC;IAA0B,wBAAQ;IAAlC;;IAIA,CAAC;IAHG,0BAAW,GAAX;QACI,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAA;IAC1C,CAAC;IACL,WAAC;AAAD,CAJA,AAIC,CAJyB,mBAAQ,GAIjC;AAJY,oBAAI","file":"static-edit.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { Editable } from './editable'\n\nexport class Block extends Editable {\n    createField(): HTMLInputElement {\n        return <any>document.createElement('textarea')\n    }\n}\n","import { Editor } from './editor'\n\nexport abstract class Editable {\n    protected elem: HTMLElement\n    protected editor: Editor\n    private changed: boolean\n\n    constructor(elem: HTMLElement, editor: Editor) {\n        this.elem = elem\n        this.editor = editor\n    }\n\n    bindEvents() {\n        this.elem.addEventListener('click', (e) => {\n            e.stopPropagation()\n            e.preventDefault()\n\n            if (!this.editor.editionStarted()) {\n                return false\n            }\n\n            const input = this.createField()\n            input.value = this.elem.innerText\n\n            input.addEventListener('blur', () => {\n                const oldValue = this.elem.innerText\n                const newValue = input.value\n                this.elem.innerText = newValue\n                this.changed = true\n                input.parentNode.replaceChild(this.elem, input)\n\n                // Make sure that no one triggers a new click on an editable while this is running\n                setTimeout(() => this.editor.editionEnded(this.elem, oldValue, newValue), 100)\n            })\n\n            input.addEventListener('click', (e) => {\n                e.stopPropagation()\n                e.preventDefault()\n            })\n\n            let resize = () => {\n                input.style.height = 'auto'\n                input.style.height = input.scrollHeight + 'px'\n            }\n\n            // Workaround for cut, paste, drop and keydown\n            let delayedResize = () => window.setTimeout(resize, 0)\n\n            input.addEventListener('change', resize)\n            input.addEventListener('cut', delayedResize)\n            input.addEventListener('paste', delayedResize)\n            input.addEventListener('drop', delayedResize)\n            input.addEventListener('keydown', delayedResize)\n\n            input.style.width = 'auto'\n            input.style.height = this.elem.offsetHeight + 'px'\n            input.style.overflowY = \"hidden\"\n            input.style.fontSize = window.getComputedStyle(this.elem).fontSize\n\n            this.elem.parentNode.replaceChild(input, this.elem)\n            input.focus()\n            resize()\n        }, true)\n    }\n\n    abstract createField(): HTMLInputElement\n\n    get value(): string {\n        return this.elem.textContent\n    }\n\n    get element(): HTMLElement {\n        return this.elem\n    }\n\n    get hasChanged(): boolean {\n        return this.changed\n    }\n}\n","import { Block } from './block'\nimport { Line } from './line'\nimport { Editable } from './editable'\n\nexport type Options = {\n    saveButton: boolean\n}\n\nexport class Editor {\n    private editing: boolean\n    private elems: Editable[]\n\n    constructor(private options: Options) {\n        this.elems = []\n        const elems: HTMLCollectionOf<Element> = document.getElementsByClassName('editable')\n\n        for (let i = 0; i < elems.length; ++i) {\n            let elm: Editable\n\n            if (elems[i].tagName === 'P') {\n                elm = new Block(<HTMLElement>elems[i], this)\n            } else {\n                elm = new Line(<HTMLElement>elems[i], this)\n            }\n\n            elm.bindEvents()\n            this.elems.push(elm)\n        }\n\n        this.handleOptions()\n    }\n\n    handleOptions() {\n        if (this.options.saveButton === true) {\n            const button = document.createElement('button')\n            button.addEventListener('click', (e) => {\n                e.preventDefault()\n                e.stopPropagation()\n                let saving = new CustomEvent('static_edit.saving', {detail: {changed: this.elems.filter((e) => e.hasChanged)}})\n                window.dispatchEvent(saving)\n            })\n\n            button.textContent = 'Save'\n            button.style.position = 'absolute'\n            button.style.top = '20px'\n            button.style.left = '20px'\n            document.body.appendChild(button)\n        }\n    }\n\n    editionStarted() {\n        if (this.editing) {\n            return false\n        }\n\n        this.editing = true\n\n        return true\n    }\n\n    editionEnded(elem: HTMLElement, oldValue: string, newValue: string) {\n        this.editing = false\n\n        let editionEnded = new CustomEvent('static_edit.edited', {detail: {elem, oldValue, newValue}})\n        window.dispatchEvent(editionEnded)\n    }\n}\n","import { Editable } from './editable'\n\nexport class Line extends Editable {\n    createField(): HTMLInputElement {\n        return document.createElement('input')\n    }\n}\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvYmxvY2sudHMiLCJzcmMvZWRpdGFibGUudHMiLCJzcmMvZWRpdG9yLnRzIiwic3JjL2xpbmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7QUNBQSx1Q0FBcUM7QUFFckM7SUFBMkIseUJBQVE7SUFBbkM7O0lBSUEsQ0FBQztJQUhHLDJCQUFXLEdBQVg7UUFDSSxNQUFNLENBQU0sUUFBUSxDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUMsQ0FBQTtJQUNsRCxDQUFDO0lBQ0wsWUFBQztBQUFELENBSkEsQUFJQyxDQUowQixtQkFBUSxHQUlsQztBQUpZLHNCQUFLOzs7OztBQ0FsQjtJQUtJLGtCQUFZLElBQWlCLEVBQUUsTUFBYztRQUN6QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQTtRQUNoQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQTtJQUN4QixDQUFDO0lBRUQsNkJBQVUsR0FBVjtRQUFBLGlCQW1EQztRQWxERyxJQUFJLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxVQUFDLENBQUM7WUFDbEMsQ0FBQyxDQUFDLGVBQWUsRUFBRSxDQUFBO1lBQ25CLENBQUMsQ0FBQyxjQUFjLEVBQUUsQ0FBQTtZQUVsQixFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUksQ0FBQyxNQUFNLENBQUMsY0FBYyxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUNoQyxNQUFNLENBQUMsS0FBSyxDQUFBO1lBQ2hCLENBQUM7WUFFRCxJQUFNLEtBQUssR0FBRyxLQUFJLENBQUMsV0FBVyxFQUFFLENBQUE7WUFDaEMsS0FBSyxDQUFDLEtBQUssR0FBRyxLQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQTtZQUVqQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxFQUFFO2dCQUMzQixJQUFNLFFBQVEsR0FBRyxLQUFJLENBQUMsSUFBSSxD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Q0FBQTtJQUN0QyxDQUFDO0lBQ0wsYUFBQztBQUFELENBMURBLEFBMERDLElBQUE7QUExRFksd0JBQU07Ozs7Ozs7Ozs7Ozs7OztBQ1JuQix1Q0FBcUM7QUFFckM7SUFBMEIsd0JBQVE7SUFBbEM7O0lBSUEsQ0FBQztJQUhHLDBCQUFXLEdBQVg7UUFDSSxNQUFNLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQTtJQUMxQyxDQUFDO0lBQ0wsV0FBQztBQUFELENBSkEsQUFJQyxDQUp5QixtQkFBUSxHQUlqQztBQUpZLG9CQUFJIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsImltcG9ydCB7IEVkaXRhYmxlIH0gZnJvbSAnLi9lZGl0YWJsZSdcblxuZXhwb3J0IGNsYXNzIEJsb2NrIGV4dGVuZHMgRWRpdGFibGUge1xuICAgIGNyZWF0ZUZpZWxkKCk6IEhUTUxJbnB1dEVsZW1lbnQge1xuICAgICAgICByZXR1cm4gPGFueT5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZXh0YXJlYScpXG4gICAgfVxufVxuIiwiaW1wb3J0IHsgRWRpdG9yIH0gZnJvbSAnLi9lZGl0b3InXG5cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBFZGl0YWJsZSB7XG4gICAgcHJvdGVjdGVkIGVsZW06IEhUTUxFbGVtZW50XG4gICAgcHJvdGVjdGVkIGVkaXRvcjogRWRpdG9yXG4gICAgcHJpdmF0ZSBjaGFuZ2VkOiBib29sZWFuXG5cbiAgICBjb25zdHJ1Y3RvcihlbGVtOiBIVE1MRWxlbWVudCwgZWRpdG9yOiBFZGl0b3IpIHtcbiAgICAgICAgdGhpcy5lbGVtID0gZWxlbVxuICAgICAgICB0aGlzLmVkaXRvciA9IGVkaXRvclxuICAgIH1cblxuICAgIGJpbmRFdmVudHMoKSB7XG4gICAgICAgIHRoaXMuZWxlbS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG4gICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KClcblxuICAgICAgICAgICAgaWYgKCF0aGlzLmVkaXRvci5lZGl0aW9uU3RhcnRlZCgpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IGlucHV0ID0gdGhpcy5jcmVhdGVGaWVsZCgpXG4gICAgICAgICAgICBpbnB1dC52YWx1ZSA9IHRoaXMuZWxlbS5pbm5lclRleHRcblxuICAgICAgICAgICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignYmx1cicsICgpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBvbGRWYWx1ZSA9IHRoaXMuZWxlbS5pbm5lclRleHRcbiAgICAgICAgICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IGlucHV0LnZhbHVlXG4gICAgICAgICAgICAgICAgdGhpcy5lbGVtLmlubmVyVGV4dCA9IG5ld1ZhbHVlXG4gICAgICAgICAgICAgICAgdGhpcy5jaGFuZ2VkID0gdHJ1ZVxuICAgICAgICAgICAgICAgIGlucHV0LnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKHRoaXMuZWxlbSwgaW5wdXQpXG5cbiAgICAgICAgICAgICAgICAvLyBNYWtlIHN1cmUgdGhhdCBubyBvbmUgdHJpZ2dlcnMgYSBuZXcgY2xpY2sgb24gYW4gZWRpdGFibGUgd2hpbGUgdGhpcyBpcyBydW5uaW5nXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB0aGlzLmVkaXRvci5lZGl0aW9uRW5kZWQodGhpcy5lbGVtLCBvbGRWYWx1ZSwgbmV3VmFsdWUpLCAxMDApXG4gICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG4gICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKVxuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgbGV0IHJlc2l6ZSA9ICgpID0+IHtcbiAgICAgICAgICAgICAgICBpbnB1dC5zdHlsZS5oZWlnaHQgPSAnYXV0bydcbiAgICAgICAgICAgICAgICBpbnB1dC5zdHlsZS5oZWlnaHQgPSBpbnB1dC5zY3JvbGxIZWlnaHQgKyAncHgnXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIFdvcmthcm91bmQgZm9yIGN1dCwgcGFzdGUsIGRyb3AgYW5kIGtleWRvd25cbiAgICAgICAgICAgIGxldCBkZWxheWVkUmVzaXplID0gKCkgPT4gd2luZG93LnNldFRpbWVvdXQocmVzaXplLCAwKVxuXG4gICAgICAgICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCByZXNpemUpXG4gICAgICAgICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdjdXQnLCBkZWxheWVkUmVzaXplKVxuICAgICAgICAgICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigncGFzdGUnLCBkZWxheWVkUmVzaXplKVxuICAgICAgICAgICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignZHJvcCcsIGRlbGF5ZWRSZXNpemUpXG4gICAgICAgICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgZGVsYXllZFJlc2l6ZSlcblxuICAgICAgICAgICAgaW5wdXQuc3R5bGUud2lkdGggPSAnYXV0bydcbiAgICAgICAgICAgIGlucHV0LnN0eWxlLmhlaWdodCA9IHRoaXMuZWxlbS5vZmZzZXRIZWlnaHQgKyAncHgnXG4gICAgICAgICAgICBpbnB1dC5zdHlsZS5vdmVyZmxvd1kgPSBcImhpZGRlblwiXG4gICAgICAgICAgICBpbnB1dC5zdHlsZS5mb250U2l6ZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRoaXMuZWxlbSkuZm9udFNpemVcblxuICAgICAgICAgICAgdGhpcy5lbGVtLnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKGlucHV0LCB0aGlzLmVsZW0pXG4gICAgICAgICAgICBpbnB1dC5mb2N1cygpXG4gICAgICAgICAgICByZXNpemUoKVxuICAgICAgICB9LCB0cnVlKVxuICAgIH1cblxuICAgIGFic3RyYWN0IGNyZWF0ZUZpZWxkKCk6IEhUTUxJbnB1dEVsZW1lbnRcblxuICAgIGdldCB2YWx1ZSgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5lbGVtLnRleHRDb250ZW50XG4gICAgfVxuXG4gICAgZ2V0IGVsZW1lbnQoKTogSFRNTEVsZW1lbnQge1xuICAgICAgICByZXR1cm4gdGhpcy5lbGVtXG4gICAgfVxuXG4gICAgZ2V0IGhhc0NoYW5nZWQoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmNoYW5nZWRcbiAgICB9XG59XG4iLCJpbXBvcnQgeyBCbG9jayB9IGZyb20gJy4vYmxvY2snXG5pbXBvcnQgeyBMaW5lIH0gZnJvbSAnLi9saW5lJ1xuaW1wb3J0IHsgRWRpdGFibGUgfSBmcm9tICcuL2VkaXRhYmxlJ1xuXG5leHBvcnQgdHlwZSBPcHRpb25zID0ge1xuICAgIHNhdmVCdXR0b246IGJvb2xlYW5cbn1cblxuZXhwb3J0IGNsYXNzIEVkaXRvciB7XG4gICAgcHJpdmF0ZSBlZGl0aW5nOiBib29sZWFuXG4gICAgcHJpdmF0ZSBlbGVtczogRWRpdGFibGVbXVxuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBvcHRpb25zOiBPcHRpb25zKSB7XG4gICAgICAgIHRoaXMuZWxlbXMgPSBbXVxuICAgICAgICBjb25zdCBlbGVtczogSFRNTENvbGxlY3Rpb25PZjxFbGVtZW50PiA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2VkaXRhYmxlJylcblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGVsZW1zLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICBsZXQgZWxtOiBFZGl0YWJsZVxuXG4gICAgICAgICAgICBpZiAoZWxlbXNbaV0udGFnTmFtZSA9PT0gJ1AnKSB7XG4gICAgICAgICAgICAgICAgZWxtID0gbmV3IEJsb2NrKDxIVE1MRWxlbWVudD5lbGVtc1tpXSwgdGhpcylcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZWxtID0gbmV3IExpbmUoPEhUTUxFbGVtZW50PmVsZW1zW2ldLCB0aGlzKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBlbG0uYmluZEV2ZW50cygpXG4gICAgICAgICAgICB0aGlzLmVsZW1zLnB1c2goZWxtKVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5oYW5kbGVPcHRpb25zKClcbiAgICB9XG5cbiAgICBoYW5kbGVPcHRpb25zKCkge1xuICAgICAgICBpZiAodGhpcy5vcHRpb25zLnNhdmVCdXR0b24gPT09IHRydWUpIHtcbiAgICAgICAgICAgIGNvbnN0IGJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpXG4gICAgICAgICAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKClcbiAgICAgICAgICAgICAgICBsZXQgc2F2aW5nID0gbmV3IEN1c3RvbUV2ZW50KCdzdGF0aWNfZWRpdC5zYXZpbmcnLCB7ZGV0YWlsOiB7Y2hhbmdlZDogdGhpcy5lbGVtcy5maWx0ZXIoKGUpID0+IGUuaGFzQ2hhbmdlZCl9fSlcbiAgICAgICAgICAgICAgICB3aW5kb3cuZGlzcGF0Y2hFdmVudChzYXZpbmcpXG4gICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICBidXR0b24udGV4dENvbnRlbnQgPSAnU2F2ZSdcbiAgICAgICAgICAgIGJ1dHRvbi5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSdcbiAgICAgICAgICAgIGJ1dHRvbi5zdHlsZS50b3AgPSAnMjBweCdcbiAgICAgICAgICAgIGJ1dHRvbi5zdHlsZS5sZWZ0ID0gJzIwcHgnXG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGJ1dHRvbilcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGVkaXRpb25TdGFydGVkKCkge1xuICAgICAgICBpZiAodGhpcy5lZGl0aW5nKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZWRpdGluZyA9IHRydWVcblxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cblxuICAgIGVkaXRpb25FbmRlZChlbGVtOiBIVE1MRWxlbWVudCwgb2xkVmFsdWU6IHN0cmluZywgbmV3VmFsdWU6IHN0cmluZykge1xuICAgICAgICB0aGlzLmVkaXRpbmcgPSBmYWxzZVxuXG4gICAgICAgIGxldCBlZGl0aW9uRW5kZWQgPSBuZXcgQ3VzdG9tRXZlbnQoJ3N0YXRpY19lZGl0LmVkaXRlZCcsIHtkZXRhaWw6IHtlbGVtLCBvbGRWYWx1ZSwgbmV3VmFsdWV9fSlcbiAgICAgICAgd2luZG93LmRpc3BhdGNoRXZlbnQoZWRpdGlvbkVuZGVkKVxuICAgIH1cbn1cbiIsImltcG9ydCB7IEVkaXRhYmxlIH0gZnJvbSAnLi9lZGl0YWJsZSdcblxuZXhwb3J0IGNsYXNzIExpbmUgZXh0ZW5kcyBFZGl0YWJsZSB7XG4gICAgY3JlYXRlRmllbGQoKTogSFRNTElucHV0RWxlbWVudCB7XG4gICAgICAgIHJldHVybiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpXG4gICAgfVxufVxuIl19"}